[{"path":"/articles/legislators.html","id":"a-package-to-detect-u-s--legislator-names-in-messy-text-with-typos-and-inconsistent-name-formats","dir":"Articles","previous_headings":"","what":"A package to detect U.S. legislator names in messy text with typos and inconsistent name formats","title":"legislators","text":"Install package ","code":"devtools::install_github(\"judgelord/legislators\") library(legislators)"},{"path":"/articles/legislators.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"legislators","text":"package relies dataframe permutations names members Congress. dataframe builds basic structure voteview.com data, especially bioname field. corrections, constructs regular expression search pattern conditions pattern yield match (e.g., pattern unique match member Congress given Congress). pattern differs Congress Congress member move House Senate members similar names join leave Congress. Users can customize provided members data supply updated version extractMemberNames(). searching text, several functions clean “fix” common human typos OCR errors frustrate matching. corrections currently supplied MemberNameTypos.R. future versions, typos supplied dataframe instead, types corrections (cleaning, typos, OCR errors) optional. Additionally, users able customize typos dataframe provide argument extractMemberNames().","code":"data(\"members\")  members |> kable() data(\"typos\")  typos %>% kable()"},{"path":"/articles/legislators.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic Usage","title":"legislators","text":"main function extractMemberName() returns dataframe names ICPSR ID numbers members Congress supplied vector text. future, extractMemberName() may default returning list dataframes length supplied data example, can use extractMemberName() detect names members Congress text Congressional Record. Let’s start text Congressional Record 3/1/2007, scraped parsed using methods described . extremely simple example text strings containing names members Congress (speaker) short contain much text. However, extractMemberName() also capable searching longer much messier texts, including text names consistently formatted contain common typos introduced humans common OCR errors. Indeed, functions developed identify members Congress ugly text data like . better match member names, function currently requires either: column “congress” (can created date) vector congresses limit search (congresses)","code":"data(\"cr2007_03_01\")  cr2007_03_01 |> kable()"},{"path":"/articles/legislators.html","id":"extractmembername","dir":"Articles","previous_headings":"Basic Usage","what":"extractMemberName()","title":"legislators","text":"example, observations 110th Congress, search members served 110th. row’s speaker text contains one member case, data_row_id match_id . multiple members detected, may multiple matches per data_row_id.","code":"cr2007_03_01$congress <- 110  # extract legislator names and match to voteview ICPSR numbers cr <- extractMemberName(data = cr2007_03_01,                          col_name = \"speaker\", # The text strings to search                         congresses = 110, # This argument is not required in this case because the data contain a \"congress\" column                         members = members # Member names augmented from voteview come with this package, but users can also supply a customised data frame                         ) #> Typos fixed in 5 seconds #> Searching  data for members of the 110th, n = 154 (123 distinct strings). #> Names matched in 7 seconds #> Joining, by = c(\"congress\", \"pattern\", \"first_name\", \"last_name\") cr |> kable()"},{"path":[]},{"path":"/articles/legislators.html","id":"augmentcongress","dir":"Articles","previous_headings":"TODO","what":"augmentCongress()","title":"legislators","text":"augmentCongress() augment dataframe includes least one unique identifier include suite common identifiers. extractMemberName links detected name ICPSR IDs voteview.com, already information, like state district legislator detected text. integrate congress /congressData. example, augmentCongress may simply join identifiers datasets ICPSR numbers. Perhaps best left congress.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following object is masked from 'package:kableExtra': #>  #>     group_rows #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union full_join(cr, members) |> select(data_row_id, match_id, bioname, icpsr, congress, state, district_code, url) |> kable() #> Joining, by = c(\"icpsr\", \"bioname\", \"pattern\", \"chamber\", \"congress\", \"first_name\", \"last_name\", \"state\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Devin Judge-Lord. Author, maintainer. Maggie Nead. Author. Noah Greifer. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Judge-Lord D, Nead M, Greifer N (2022). legislators: Detect legislator names messy text. https://judgelord.github.io/legislators/, https://github.com/judgelord/legislators.","code":"@Manual{,   title = {legislators: Detect legislator names in messy text},   author = {Devin Judge-Lord and Maggie Nead and Noah Greifer},   year = {2022},   note = {https://judgelord.github.io/legislators/, https://github.com/judgelord/legislators}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"Tools to detect U.S. legislator names in messy text with typos and inconsistent name formats","what":"Installation","title":"Detect legislator names in messy text","text":"","code":"devtools::install_github(\"judgelord/legislators\") library(legislators)"},{"path":"/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Detect legislator names in messy text","text":"package relies dataframe (members) permutations names members Congress. dataframe builds basic structure voteview.com data, especially bioname field. corrections, constructs regular expression search pattern conditions pattern yield match (e.g. pattern unique match member Congress given Congress). pattern differs Congress Congress member move House Senate members similar names join leave Congress. Users can customize provided members data supply updated version extractMemberNames(). searching text, several functions clean “fix” common human typos OCR errors frustrate matching. corrections currently supplied MemberNameTypos.R. future versions, typos supplied dataframe instead, types corrections (cleaning, typos, OCR errors) optional. Additionally, users able customize typos dataframe provide argument extractMemberNames().","code":"data(\"members\")  members #> # A tibble: 49,938 × 11 #>    chamber   congress bioname                      pattern                                                                    icpsr state district_code nominate_dim1 nominate_dim2 first_name last_name #>    <chr>        <dbl> <chr>                        <chr>                                                                      <dbl> <int>         <dbl>         <dbl>         <dbl> <chr>      <chr>     #>  1 President      117 TRUMP, Donald John           \"donald trump|donald john trump|\\\\bd trump|donald j trump|don trump|don j… 99912    NA             0         0.403         0.162 Donald     TRUMP     #>  2 President      117 BIDEN, Joseph Robinette, Jr. \"joseph biden|joseph robinette biden|\\\\bj biden|joseph r biden|joe biden|… 99913    NA             0        -0.32          0.283 Joseph     BIDEN     #>  3 House          117 ROGERS, Mike Dennis          \"mike rogers|mike dennis rogers|\\\\bm rogers|mike d rogers|michael rogers|… 20301     1             3         0.36          0.461 Mike       ROGERS    #>  4 House          117 SEWELL, Terri                \"terri sewell|\\\\bt sewell|terri a sewell|\\\\bna sewell|(^|senator |represe… 21102     1             7        -0.393         0.4   Terri      SEWELL    #>  5 House          117 BROOKS, Mo                   \"mo brooks|\\\\bm brooks|\\\\bna brooks|(^|senator |representative )brooks\\\\b… 21193     1             5         0.644        -0.397 Mo         BROOKS    #>  6 House          117 PALMER, Gary James           \"gary palmer|gary james palmer|\\\\bg palmer|gary j palmer|\\\\bna palmer|(^|… 21500     1             6         0.685         0.073 Gary       PALMER    #>  7 House          117 CARL, Jerry L.               \"jerry carl|jerry l carl|\\\\bj carl|\\\\bna carl|(^|senator |representative … 22108     1             1         0.53          0.509 Jerry      CARL      #>  8 House          117 MOORE, Barry                 \"barry moore|\\\\bb moore.{1,4}al|(^|senator |representative )moore\\\\b.{1,4… 22140     1             2         0.644        -0.066 Barry      MOORE     #>  9 House          117 ADERHOLT, Robert             \"robert aderholt|\\\\br aderholt|robert b aderholt|bob aderholt|bob b aderh… 29701     1             4         0.379         0.578 Robert     ADERHOLT  #> 10 House          117 YOUNG, Donald Edwin          \"donald young|donald edwin young|\\\\bd young|donald e young|don young|don … 14066     2             1         0.283         0.022 Donald     YOUNG     #> # … with 49,928 more rows data(\"typos\")  typos #> # A tibble: 480 × 2 #>    typos                                                                                                  correct              #>    <chr>                                                                                                  <chr>                #>  1 ( 0 | 0, )                                                                                             \" o \"                #>  2 aaron( | [a-z]* )s chock($| |,|;)|s chock, aaron                                                       \"aaron schock\"       #>  3 adam( | [a-z]* )(schif|sdxiff)($| |,|;)|(schif|sdxiff), adam                                           \"adam schiff\"        #>  4 adrian( | [a-z]* )espaillat|espaillat, adrian|adriano( | [a-z]* )espaillet($| |,|;)|espaillet, adriano \"adriano espaillat\"  #>  5 al( | [a-z]* )fianken($| |,|;)|fianken, al                                                             \"al franken\"         #>  6 (alccc|ateee)( | [a-z]* )hastings|hastings, (alccc|ateee)                                              \"alcee hastings\"     #>  7 allyson( | [a-z]* )schwaltz($| |,|;)|schwaltz, allyson                                                 \"allyson schwartz\"   #>  8 allyson d schwartz|schwartz, allyson d                                                                 \"allyson y schwartz\" #>  9 ami( | [a-z]* )(beta|gera)($| |,|;)|(beta|gera), ami                                                   \"ami bera\"           #> 10 amy( | [a-z]* )klobachur|klobachar($| |,|;)|klobachur|klobachar, amy                                   \"amy klobuchar\"      #> # … with 470 more rows"},{"path":"/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"Detect legislator names in messy text","text":"main function extractMemberName() returns dataframe names ICPSR ID numbers members Congress supplied vector text. future, extractMemberName() may default returning list dataframes length supplied data example, can use extractMemberName() detect names members Congress text Congressional Record. Let’s start text Congressional Record 3/1/2007, scraped parsed using methods described . extremely simple example text strings containing names members Congress (speaker) short contain much text. However, extractMemberName() can also search longer much messier texts, including text names consistently formatted contain common typos introduced humans common OCR errors. Indeed, functions developed identify members Congress ugly text data like . better match member names, function currently requires either: column “congress” (can created date) vector congresses limit search (congresses)","code":"data(\"cr2007_03_01\")  cr2007_03_01 #> # A tibble: 154 × 5 #>    date       speaker                             header                                                            url                                          url_txt                                 #>    <date>     <chr>                               <chr>                                                             <chr>                                        <chr>                                   #>  1 2007-03-01 HON. SAM GRAVES;Mr. GRAVES          RECOGNIZING JARRETT MUCK FOR ACHIEVING THE RANK OF EAGLE SCOUT; … https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  2 2007-03-01 HON. MARK UDALL;Mr. UDALL           INTRODUCING A CONCURRENT RESOLUTION HONORING THE 50TH ANNIVERSAR… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  3 2007-03-01 HON. JAMES R. LANGEVIN;Mr. LANGEVIN BIOSURVEILLANCE ENHANCEMENT ACT OF 2007; Congressional Record Vo… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  4 2007-03-01 HON. JIM COSTA;Mr. COSTA            A TRIBUTE TO THE LIFE OF MRS. VERNA DUTY; Congressional Record V… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  5 2007-03-01 HON. SAM GRAVES;Mr. GRAVES          RECOGNIZING JARRETT MUCK FOR ACHIEVING THE RANK OF EAGLE SCOUT    https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  6 2007-03-01 HON. SANFORD D. BISHOP;Mr. BISHOP   IN HONOR OF SYNOVUS BEING NAMED ONE OF THE BEST COMPANIES IN AME… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  7 2007-03-01 HON. EDOLPHUS TOWNS;Mr. TOWNS       NEW PUNJAB CHIEF MINISTER URGED TO WORK FOR SIKH SOVEREIGNTY; Co… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  8 2007-03-01 HON. TOM DAVIS;Mr. TOM DAVIS        HONORING THE 30TH ANNIVERSARY OF THE BAILEY'S CROSSROADS ROTARY … https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  9 2007-03-01 HON. SAM GRAVES;Mr. GRAVES          RECOGNIZING BRIAN PATRICK WESSLING FOR ACHIEVING THE RANK OF EAG… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #> 10 2007-03-01 HON. MARK UDALL;Mr. UDALL           INTRODUCTION OF ROYALTY-IN-KIND FOR ENERGY ASSISTANCE LEGISLATIO… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #> # … with 144 more rows head(cr2007_03_01$url) #> [1] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-2\" #> [2] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-3\" #> [3] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-4\" #> [4] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-5\" #> [5] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-1\" #> [6] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E432-2\" head(cr2007_03_01$speaker) #> [1] \"HON. SAM GRAVES;Mr. GRAVES\"          \"HON. MARK UDALL;Mr. UDALL\"           \"HON. JAMES R. LANGEVIN;Mr. LANGEVIN\" \"HON. JIM COSTA;Mr. COSTA\"            \"HON. SAM GRAVES;Mr. GRAVES\"          #> [6] \"HON. SANFORD D. BISHOP;Mr. BISHOP\""},{"path":"/index.html","id":"extractmembername","dir":"","previous_headings":"Basic Usage","what":"extractMemberName()","title":"Detect legislator names in messy text","text":"example, observations 110th Congress, search members served 110th. row’s speaker text contains one member case, data_row_id match_id . multiple members detected, may multiple matches per data_row_id.","code":"cr2007_03_01$congress <- 110  # extract legislator names and match to voteview ICPSR numbers cr <- extractMemberName(data = cr2007_03_01,                          col_name = \"speaker\", # The text strings to search                         congresses = 110, # This argument is not required in this case because the data contain a \"congress\" column                         members = members # Member names augmented from voteview come with this package, but users can also supply a customised data frame                         ) #> Typos fixed in 5 seconds  #> Searching  data for members of the 110th, n = 154 (123 distinct strings).  #> Names matched in 7 seconds  #> Joining, by = c(\"congress\", \"pattern\", \"first_name\", \"last_name\") cr #> # A tibble: 193 × 16 #>    data_row_id match_id icpsr bioname                    string                           pattern        chamber congress date       speaker  header       url      url_txt   first_name last_name state #>    <chr>       <chr>    <dbl> <chr>                      <chr>                            <chr>          <chr>      <dbl> <date>     <chr>    <chr>        <chr>    <chr>     <chr>      <chr>     <int> #>  1 000001      000001   20124 GRAVES, Samuel             hon sam graves;mr graves         \"samuel grave… House        110 2007-03-01 HON. SA… RECOGNIZING… https:/… https://… Samuel     GRAVES       26 #>  2 000002      000002   29906 UDALL, Mark                hon mark udall;mr udall          \"mark udall|\\… House        110 2007-03-01 HON. MA… INTRODUCING… https:/… https://… Mark       UDALL         6 #>  3 000003      000003   20136 LANGEVIN, James            hon james r langevin;mr langevin \"james langev… House        110 2007-03-01 HON. JA… BIOSURVEILL… https:/… https://… James      LANGEVIN     41 #>  4 000004      000004   20501 COSTA, Jim                 hon jim costa;mr costa           \"jim costa|\\\\… House        110 2007-03-01 HON. JI… A TRIBUTE T… https:/… https://… Jim        COSTA         5 #>  5 000005      000005   20124 GRAVES, Samuel             hon sam graves;mr graves         \"samuel grave… House        110 2007-03-01 HON. SA… RECOGNIZING… https:/… https://… Samuel     GRAVES       26 #>  6 000006      000006   29339 BISHOP, Sanford Dixon, Jr. hon sanford d bishop;mr bishop   \"sanford bish… House        110 2007-03-01 HON. SA… IN HONOR OF… https:/… https://… Sanford    BISHOP       11 #>  7 000007      000007   15072 TOWNS, Edolphus            hon edolphus towns;mr towns      \"edolphus tow… House        110 2007-03-01 HON. ED… NEW PUNJAB … https:/… https://… Edolphus   TOWNS        33 #>  8 000008      000008   29576 DAVIS, Thomas M., III      hon tom davis;mr tom davis       \"thomas davis… House        110 2007-03-01 HON. TO… HONORING TH… https:/… https://… Thomas     DAVIS        48 #>  9 000009      000009   20124 GRAVES, Samuel             hon sam graves;mr graves         \"samuel grave… House        110 2007-03-01 HON. SA… RECOGNIZING… https:/… https://… Samuel     GRAVES       26 #> 10 000010      000010   29906 UDALL, Mark                hon mark udall;mr udall          \"mark udall|\\… House        110 2007-03-01 HON. MA… INTRODUCTIO… https:/… https://… Mark       UDALL         6 #> # … with 183 more rows"},{"path":[]},{"path":"/index.html","id":"augmentcongress","dir":"","previous_headings":"TODO","what":"augmentCongress()","title":"Detect legislator names in messy text","text":"augmentCongress() augment dataframe includes least one unique identifier include suite common identifiers. extractMemberName links detected name ICPSR IDs voteview.com, already information, like state district legislator detected text. integrate congress /congressData packages. example, may want augmentCongress simply join identifiers datasets ICPSR numbers. Perhaps best left congress.","code":"library(dplyr) #>  #> Attaching package: 'dplyr'  #> The following objects are masked from 'package:stats': #>  #>     filter, lag  #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union full_join(cr, members) |> select(data_row_id, match_id, bioname, icpsr, congress, state, district_code, url) #> Joining, by = c(\"icpsr\", \"bioname\", \"pattern\", \"chamber\", \"congress\", \"first_name\", \"last_name\", \"state\")  #> # A tibble: 50,038 × 8 #>    data_row_id match_id bioname                    icpsr congress state district_code url                                                                                                   #>    <chr>       <chr>    <chr>                      <dbl>    <dbl> <int>         <dbl> <chr>                                                                                                 #>  1 000001      000001   GRAVES, Samuel             20124      110    26             6 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-2 #>  2 000002      000002   UDALL, Mark                29906      110     6             2 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-3 #>  3 000003      000003   LANGEVIN, James            20136      110    41             2 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-4 #>  4 000004      000004   COSTA, Jim                 20501      110     5            20 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-5 #>  5 000005      000005   GRAVES, Samuel             20124      110    26             6 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-1 #>  6 000006      000006   BISHOP, Sanford Dixon, Jr. 29339      110    11             2 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E432-2 #>  7 000007      000007   TOWNS, Edolphus            15072      110    33            10 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E432-3 #>  8 000008      000008   DAVIS, Thomas M., III      29576      110    48            11 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E432-1 #>  9 000009      000009   GRAVES, Samuel             20124      110    26             6 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E433-2 #> 10 000010      000010   UDALL, Mark                29906      110     6             2 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E433-3 #> # … with 50,028 more rows # add other common unique identifiers cr_augmented <- augmentCongress(cr)"},{"path":[]},{"path":"/reference/extractMemberName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect legislator names in messy text\n — extractMemberName","text":"","code":"extractMemberName(data, members = members, col_name, congresses = unique(data$congress))"},{"path":"/reference/extractMemberName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect legislator names in messy text\n — extractMemberName","text":"data  members  col_name  congresses","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/extractMemberName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect legislator names in messy text\n — extractMemberName","text":"","code":"##---- Should be DIRECTLY executable !! ---- ##-- ==>  Define data, use random, ##--  or do  help(data=index)  for the standard data sets.  ## The function is currently defined as function (data, members = members, col_name, congresses = unique(data$congress)) {     data %<>% mutate(string = data[[col_name]])     if (\"chamber\" %in% names(data)) {         data %<>% mutate(string = ifelse(!is.na(chamber), paste(chamber,             string) %>% str_replace(\"House\", \"Represenative\") %>%             str_replace(\"Senate\", \"Senator\"), string))         data %<>% select(-chamber)     }     if (\"state\" %in% names(data)) {         data %<>% mutate(string = ifelse(!is.na(state), paste(string,             \"-\", stateFromFull(state)), string))         data %<>% select(-state)     }     t <- Sys.time()     if (!\"data_id\" %in% names(data)) {         data$data_id <- 1:nrow(data)     }     data$data_id %<>% str_squish() %>% as.numeric()     data$ID <- 1:nrow(data)     data %<>% mutate(data_id = coalesce(data_id, ID) %>% as.numeric())     data$data_id %<>% formatC(width = 6, flag = \"0\", format = \"fg\")     data$congress %<>% replace_na(0) %>% as.numeric() %>% replace_na(0) %>%         as.numeric()     data %<>% mutate(last_name = NA, first_name = NA, pattern = NA) %>%         select(-first_name, -last_name, -pattern)     data$string %<>% cleanFROMcolumn()     data$string %<>% ocr.errors()     data$string %<>% tolower() %>% str_replace(\"senator senator\",         \"senator\") %>% str_replace(\"represenative representative\",         \"representative\")     data$string %<>% str_replace(\"na politano\", \"napolitano\")     data$string %<>% str_remove(\"^na \")     data$string %<>% str_remove(\"^na \")     data$string %<>% str_replace(\"han na\\b\", \"hanna\")     data$string %<>% str_remove_all(\"\\bna\\b\")     data$string %<>% str_squish()     data$string %<>% str_replace(\" ,\", \", \")     data$string %<>% str_squish()     data$string %<>% replace_na(\"\")     for (i in 1:dim(typos)[1]) {         r <- typos$correct[i]         p <- typos$typos[i]         data %<>% mutate(string = string %>% purrr::map_chr(str_replace,             pattern = p, replacement = r %>% paste(\"\")))     }     data$string %<>% str_replace(\" ,\", \", \") %>% str_squish()     base::message(paste(\"Typos fixed in\", round(Sys.time() -         t), \"seconds\"))     t <- Sys.time()     data <- map_dfr(congresses, extractNamesPerCongress, data = data,         members = members)     base::message(paste(\"Names matched in\", round(Sys.time() -         t), \"seconds\"))     data %<>% distinct()     data$ID <- 1:nrow(data) %>% formatC(width = 6, flag = \"0\")     data %<>% left_join(members %>% select(icpsr, pattern, bioname,         first_name, last_name, congress, chamber, state) %>%         distinct()) %>% distinct()     data$icpsr %<>% as.numeric()     data %<>% select(data_row_id = data_id, match_id = ID, icpsr,         bioname, string, pattern, chamber, congress, everything())     return(data)   } #> function (data, members = members, col_name, congresses = unique(data$congress)) #> { #>     data %<>% mutate(string = data[[col_name]]) #>     if (\"chamber\" %in% names(data)) { #>         data %<>% mutate(string = ifelse(!is.na(chamber), paste(chamber, #>             string) %>% str_replace(\"House\", \"Represenative\") %>% #>             str_replace(\"Senate\", \"Senator\"), string)) #>         data %<>% select(-chamber) #>     } #>     if (\"state\" %in% names(data)) { #>         data %<>% mutate(string = ifelse(!is.na(state), paste(string, #>             \"-\", stateFromFull(state)), string)) #>         data %<>% select(-state) #>     } #>     t <- Sys.time() #>     if (!\"data_id\" %in% names(data)) { #>         data$data_id <- 1:nrow(data) #>     } #>     data$data_id %<>% str_squish() %>% as.numeric() #>     data$ID <- 1:nrow(data) #>     data %<>% mutate(data_id = coalesce(data_id, ID) %>% as.numeric()) #>     data$data_id %<>% formatC(width = 6, flag = \"0\", format = \"fg\") #>     data$congress %<>% replace_na(0) %>% as.numeric() %>% replace_na(0) %>% #>         as.numeric() #>     data %<>% mutate(last_name = NA, first_name = NA, pattern = NA) %>% #>         select(-first_name, -last_name, -pattern) #>     data$string %<>% cleanFROMcolumn() #>     data$string %<>% ocr.errors() #>     data$string %<>% tolower() %>% str_replace(\"senator senator\", #>         \"senator\") %>% str_replace(\"represenative representative\", #>         \"representative\") #>     data$string %<>% str_replace(\"na politano\", \"napolitano\") #>     data$string %<>% str_remove(\"^na \") #>     data$string %<>% str_remove(\"^na \") #>     data$string %<>% str_replace(\"han na\\b\", \"hanna\") #>     data$string %<>% str_remove_all(\"\\bna\\b\") #>     data$string %<>% str_squish() #>     data$string %<>% str_replace(\" ,\", \", \") #>     data$string %<>% str_squish() #>     data$string %<>% replace_na(\"\") #>     for (i in 1:dim(typos)[1]) { #>         r <- typos$correct[i] #>         p <- typos$typos[i] #>         data %<>% mutate(string = string %>% purrr::map_chr(str_replace, #>             pattern = p, replacement = r %>% paste(\"\"))) #>     } #>     data$string %<>% str_replace(\" ,\", \", \") %>% str_squish() #>     base::message(paste(\"Typos fixed in\", round(Sys.time() - #>         t), \"seconds\")) #>     t <- Sys.time() #>     data <- map_dfr(congresses, extractNamesPerCongress, data = data, #>         members = members) #>     base::message(paste(\"Names matched in\", round(Sys.time() - #>         t), \"seconds\")) #>     data %<>% distinct() #>     data$ID <- 1:nrow(data) %>% formatC(width = 6, flag = \"0\") #>     data %<>% left_join(members %>% select(icpsr, pattern, bioname, #>         first_name, last_name, congress, chamber, state) %>% #>         distinct()) %>% distinct() #>     data$icpsr %<>% as.numeric() #>     data %<>% select(data_row_id = data_id, match_id = ID, icpsr, #>         bioname, string, pattern, chamber, congress, everything()) #>     return(data) #>   } #> <environment: 0x12f581fc8>"}]
