[{"path":"/articles/legislators.html","id":"a-package-to-detect-u-s--legislator-names-in-messy-text-with-typos-and-inconsistent-name-formats","dir":"Articles","previous_headings":"","what":"A package to detect U.S. legislator names in messy text with typos and inconsistent name formats","title":"legislators","text":"Install package ","code":"devtools::install_github(\"judgelord/legislators\") library(legislators)"},{"path":"/articles/legislators.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"legislators","text":"package relies dataframe permutations names members Congress. dataframe builds basic structure voteview.com data, especially bioname field. corrections, constructs regular expression search pattern conditions pattern yield match (e.g. pattern unique match member Congress given Congress). pattern differs Congress Congress member move House Senate members similar names join leave Congress. Users can customize provided members data supply updted version extractMemberNames(). searching text, several functions clean “fix” common human typos OCR errors frustrate matching. corrections currently supplied MemberNameTypos.R. future versions, typos supplied dataframe instead, types corrections (cleaning, typos, OCR erros) optional. Additionally, users able customize typos dataframe provide argument extractMemberNames().","code":"data(\"members\")  members[c(\"chamber\", \"congress\", \"bioname\", \"pattern\")]  |> kable() data(\"typos\")  typos %>% kable()"},{"path":"/articles/legislators.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic Usage","title":"legislators","text":"main function extractMemberName() returns dataframe names ICPSR ID numbers members Congress supplied vector text. future, extractMemberName() may default returning list dataframes length supplied data example, can use extractMemberName() detect names members Congress text Congressional Record. Let’s start text Congressional Record 3/1/2007, scraped parsed using methods described . extremely simple example text strings containing names members Congress (speaker) short contain much text. However, extractMemberName() also capable searching longer much messier texts, including text names consistently formatted contain common typos introduced humans common OCR errors. Indeed, functions developed identify members Congress ugly text data like . better match member names, function currently requires either column “congress” (can created date) vector congresses limit search (congresses)","code":"data(\"cr2007_03_01\")  cr2007_03_01 |> kable() head(cr2007_03_01$url) #> [1] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-2\" #> [2] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-3\" #> [3] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-4\" #> [4] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-5\" #> [5] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-1\" #> [6] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E432-2\" head(cr2007_03_01$speaker) #> [1] \"HON. SAM GRAVES;Mr. GRAVES\"          \"HON. MARK UDALL;Mr. UDALL\"           \"HON. JAMES R. LANGEVIN;Mr. LANGEVIN\" \"HON. JIM COSTA;Mr. COSTA\"            \"HON. SAM GRAVES;Mr. GRAVES\"          #> [6] \"HON. SANFORD D. BISHOP;Mr. BISHOP\""},{"path":"/articles/legislators.html","id":"extractmembername","dir":"Articles","previous_headings":"Basic Usage","what":"extractMemberName()","title":"legislators","text":"example, observations 110th Congress, search members served 110th. row’s speaker text contains one member case, data_row_id match_id . multiple members detected, may multiple matches per data_row_id.","code":"cr2007_03_01$congress <- 110  # extract legislator names and match to voteview ICPSR numbers cr <- extractMemberName(data = cr2007_03_01,                          col_name = \"speaker\", # The text strings to search                         congresses = 110, # This argument is not required in this case because the data contain a \"congress\" column                         members = members # Member names augmented from voteview come with this package, but users can also supply a customised data frame                         ) #> Typos fixed in 5 seconds #> Searching  data for members of the 110th, n = 154 (123 distinct strings). #> Names matched in 7 seconds #> Joining, by = c(\"congress\", \"pattern\", \"first_name\", \"last_name\") cr |> kable()"},{"path":[]},{"path":"/articles/legislators.html","id":"augmentcongress","dir":"Articles","previous_headings":"TODO","what":"augmentCongress()","title":"legislators","text":"augmentCongress() augments dataframe includes least one unique identifier include suite common identifiers. extractMemberName links detected name ICPSR IDs voteview.com, already information, like party (party_name), state, district, ideology scores (nominate.dim1) legislator detected text. integrate congress /congressData. example, may want function, augmentCongress simply join identifiers datasets ICPSR numbers. Perhaps best left congress.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following object is masked from 'package:kableExtra': #>  #>     group_rows #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union full_join(cr, members) |> select(data_row_id, match_id, bioname, icpsr, congress, state, district_code, party_name, nominate.dim1, url) |> kable() #> Joining, by = c(\"icpsr\", \"bioname\", \"pattern\", \"chamber\", \"congress\", \"first_name\", \"last_name\", \"state\") # add other common unique identifiers cr_augmented <- augmentCongress(cr)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Devin Judge-Lord. Author, maintainer. Maggie Nead. Author. Noah Greifer. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Judge-Lord D, Nead M, Greifer N (2022). legislators: Detect legislator names messy text. https://judgelord.github.io/legislators/, https://github.com/judgelord/legislators.","code":"@Manual{,   title = {legislators: Detect legislator names in messy text},   author = {Devin Judge-Lord and Maggie Nead and Noah Greifer},   year = {2022},   note = {https://judgelord.github.io/legislators/, https://github.com/judgelord/legislators}, }"},{"path":"/index.html","id":"a-package-to-detect-us-legislator-names-in-messy-text-with-typos-and-inconsistent-name-formats","dir":"","previous_headings":"","what":"A package to detect U.S. legislator names in messy text with typos and inconsistent name formats","title":"Detect legislator names in messy text","text":"Install package ","code":"devtools::install_github(\"judgelord/legislators\") library(legislators)"},{"path":"/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"Detect legislator names in messy text","text":"package relies dataframe (members) permutations names members Congress. dataframe builds basic structure voteview.com data, especially bioname field. corrections, constructs regular expression search pattern conditions pattern yield match (e.g. pattern unique match member Congress given Congress). pattern differs Congress Congress member move House Senate members similar names join leave Congress. Users can customize provided members data supply updted version extractMemberNames(). searching text, several functions clean “fix” common human typos OCR errors frustrate matching. corrections currently supplied MemberNameTypos.R. future versions, typos supplied dataframe instead, types corrections (cleaning, typos, OCR erros) optional. Additionally, users able customize typos dataframe provide argument extractMemberNames().","code":"data(\"members\")  members[c(\"chamber\", \"congress\", \"bioname\", \"pattern\")] #> # A tibble: 6,566 × 4 #>    chamber   congress bioname                        pattern                                                                                                                                             #>    <chr>        <int> <chr>                          <chr>                                                                                                                                               #>  1 President      108 BUSH, George Walker            \"george bush|george walker bush|\\\\bg bush|george w bush|\\\\bna bush|(^|senator |representative )bush\\\\b|bush, george|bush george|bush, g\\\\b|preside… #>  2 House          108 DEAL, John Nathan              \"john deal|john nathan deal|\\\\bj deal|john n deal|nathan deal|nathan nathan deal|nathan n deal|\\\\bn deal|(^|senator |representative )deal\\\\b|deal,… #>  3 Senate         108 CAMPBELL, Ben Nighthorse       \"ben campbell|ben nighthorse campbell|\\\\bb campbell|ben n campbell|benjamin campbell|benjamin nighthorse campbell|benjamin n campbell|(^|senator |… #>  4 House          108 HALL, Ralph Moody              \"ralph hall|ralph moody hall|\\\\br hall|ralph m hall|\\\\bna hall|(^|senator |representative )hall\\\\b|hall, ralph|hall ralph|hall, r\\\\b|representativ… #>  5 House          108 TAUZIN, Wilbert Joseph (Billy) \"wilbert tauzin|wilbert joseph tauzin|\\\\bw tauzin|wilbert j tauzin|billy tauzin|billy joseph tauzin|billy j tauzin|\\\\bb tauzin|(^|senator |represe… #>  6 Senate         108 SHELBY, Richard C.             \"richard shelby|richard c shelby|\\\\br shelby|rich shelby|rich c shelby|(^|senator |representative )shelby\\\\b|shelby, rich|shelby, richard|shelby r… #>  7 Senate         108 JEFFORDS, James Merrill        \"james jeffords|james merrill jeffords|\\\\bj jeffords|james m jeffords|jim jeffords|jim merrill jeffords|jim m jeffords|(^|senator |representative … #>  8 House          108 GOODE, Virgil H., Jr.          \"virgil goode|virgil h goode|\\\\bv goode|\\\\bna goode|(^|senator |representative )goode\\\\b|goode, virgil|goode virgil|goode, v\\\\b|representative goo… #>  9 Senate         108 CHAFEE, Lincoln Davenport      \"lincoln chafee|lincoln davenport chafee|\\\\bl chafee|lincoln d chafee|\\\\bna chafee|(^|senator |representative )chafee\\\\b|chafee, lincoln|chafee li… #> 10 Senate         108 MILLER, Zell Bryan             \"zell miller|zell bryan miller|\\\\bz miller|zell b miller|(^|senator |representative )miller\\\\b.{1,4}ga|miller, zell|miller zell|miller, z\\\\b|senat… #> # … with 6,556 more rows data(\"typos\")  typos #> # A tibble: 480 × 2 #>    typos                                                                                                  correct              #>    <chr>                                                                                                  <chr>                #>  1 ( 0 | 0, )                                                                                             \" o \"                #>  2 aaron( | [a-z]* )s chock($| |,|;)|s chock, aaron                                                       \"aaron schock\"       #>  3 adam( | [a-z]* )(schif|sdxiff)($| |,|;)|(schif|sdxiff), adam                                           \"adam schiff\"        #>  4 adrian( | [a-z]* )espaillat|espaillat, adrian|adriano( | [a-z]* )espaillet($| |,|;)|espaillet, adriano \"adriano espaillat\"  #>  5 al( | [a-z]* )fianken($| |,|;)|fianken, al                                                             \"al franken\"         #>  6 (alccc|ateee)( | [a-z]* )hastings|hastings, (alccc|ateee)                                              \"alcee hastings\"     #>  7 allyson( | [a-z]* )schwaltz($| |,|;)|schwaltz, allyson                                                 \"allyson schwartz\"   #>  8 allyson d schwartz|schwartz, allyson d                                                                 \"allyson y schwartz\" #>  9 ami( | [a-z]* )(beta|gera)($| |,|;)|(beta|gera), ami                                                   \"ami bera\"           #> 10 amy( | [a-z]* )klobachur|klobachar($| |,|;)|klobachur|klobachar, amy                                   \"amy klobuchar\"      #> # … with 470 more rows"},{"path":"/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"Detect legislator names in messy text","text":"main function extractMemberName() returns dataframe names ICPSR ID numbers members Congress supplied vector text. future, extractMemberName() may default returning list dataframes length supplied data example, can use extractMemberName() detect names members Congress text Congressional Record. Let’s start text Congressional Record 3/1/2007, scraped parsed using methods described . extremely simple example text strings containing names members Congress (speaker) short contain much text. However, extractMemberName() also capable searching longer much messier texts, including text names consistently formatted contain common typos introduced humans common OCR errors. Indeed, functions developed identify members Congress ugly text data like . better match member names, function currently requires either column “congress” (can created date) vector congresses limit search (congresses)","code":"data(\"cr2007_03_01\")  cr2007_03_01 #> # A tibble: 154 × 5 #>    date       speaker                             header                                                            url                                          url_txt                                 #>    <date>     <chr>                               <chr>                                                             <chr>                                        <chr>                                   #>  1 2007-03-01 HON. SAM GRAVES;Mr. GRAVES          RECOGNIZING JARRETT MUCK FOR ACHIEVING THE RANK OF EAGLE SCOUT; … https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  2 2007-03-01 HON. MARK UDALL;Mr. UDALL           INTRODUCING A CONCURRENT RESOLUTION HONORING THE 50TH ANNIVERSAR… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  3 2007-03-01 HON. JAMES R. LANGEVIN;Mr. LANGEVIN BIOSURVEILLANCE ENHANCEMENT ACT OF 2007; Congressional Record Vo… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  4 2007-03-01 HON. JIM COSTA;Mr. COSTA            A TRIBUTE TO THE LIFE OF MRS. VERNA DUTY; Congressional Record V… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  5 2007-03-01 HON. SAM GRAVES;Mr. GRAVES          RECOGNIZING JARRETT MUCK FOR ACHIEVING THE RANK OF EAGLE SCOUT    https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  6 2007-03-01 HON. SANFORD D. BISHOP;Mr. BISHOP   IN HONOR OF SYNOVUS BEING NAMED ONE OF THE BEST COMPANIES IN AME… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  7 2007-03-01 HON. EDOLPHUS TOWNS;Mr. TOWNS       NEW PUNJAB CHIEF MINISTER URGED TO WORK FOR SIKH SOVEREIGNTY; Co… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  8 2007-03-01 HON. TOM DAVIS;Mr. TOM DAVIS        HONORING THE 30TH ANNIVERSARY OF THE BAILEY'S CROSSROADS ROTARY … https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #>  9 2007-03-01 HON. SAM GRAVES;Mr. GRAVES          RECOGNIZING BRIAN PATRICK WESSLING FOR ACHIEVING THE RANK OF EAG… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #> 10 2007-03-01 HON. MARK UDALL;Mr. UDALL           INTRODUCTION OF ROYALTY-IN-KIND FOR ENERGY ASSISTANCE LEGISLATIO… https://www.congress.gov/congressional-reco… https://www.congress.gov/117/crec/2007… #> # … with 144 more rows head(cr2007_03_01$url) #> [1] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-2\" #> [2] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-3\" #> [3] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-4\" #> [4] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-5\" #> [5] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E431-1\" #> [6] \"https://www.congress.gov/congressional-record/2007/03/01/extensions-of-remarks-section/article/E432-2\" head(cr2007_03_01$speaker) #> [1] \"HON. SAM GRAVES;Mr. GRAVES\"          \"HON. MARK UDALL;Mr. UDALL\"           \"HON. JAMES R. LANGEVIN;Mr. LANGEVIN\" \"HON. JIM COSTA;Mr. COSTA\"            \"HON. SAM GRAVES;Mr. GRAVES\"          #> [6] \"HON. SANFORD D. BISHOP;Mr. BISHOP\""},{"path":"/index.html","id":"extractmembername","dir":"","previous_headings":"Basic Usage","what":"extractMemberName()","title":"Detect legislator names in messy text","text":"example, observations 110th Congress, search members served 110th. row’s speaker text contains one member case, data_row_id match_id . multiple members detected, may multiple matches per data_row_id.","code":"cr2007_03_01$congress <- 110  # extract legislator names and match to voteview ICPSR numbers cr <- extractMemberName(data = cr2007_03_01,                          col_name = \"speaker\", # The text strings to search                         congresses = 110, # This argument is not required in this case because the data contain a \"congress\" column                         members = members # Member names augmented from voteview come with this package, but users can also supply a customised data frame                         ) #> Typos fixed in 5 seconds  #> Searching  data for members of the 110th, n = 154 (123 distinct strings).  #> Names matched in 7 seconds  #> Joining, by = c(\"congress\", \"pattern\", \"first_name\", \"last_name\") cr #> # A tibble: 194 × 16 #>    data_row_id match_id icpsr bioname                    string                           pattern        chamber congress date       speaker  header      url       url_txt   first_name last_name state #>    <chr>       <chr>    <dbl> <chr>                      <chr>                            <chr>          <chr>      <dbl> <date>     <chr>    <chr>       <chr>     <chr>     <chr>      <chr>     <chr> #>  1 000001      000001   20124 GRAVES, Samuel             hon sam graves;mr graves         \"samuel grave… House        110 2007-03-01 HON. SA… RECOGNIZIN… https://… https://… Samuel     GRAVES    miss… #>  2 000002      000002   29906 UDALL, Mark                hon mark udall;mr udall          \"mark udall|\\… House        110 2007-03-01 HON. MA… INTRODUCIN… https://… https://… Mark       UDALL     colo… #>  3 000003      000003   20136 LANGEVIN, James            hon james r langevin;mr langevin \"james langev… House        110 2007-03-01 HON. JA… BIOSURVEIL… https://… https://… James      LANGEVIN  rhod… #>  4 000004      000004   20501 COSTA, Jim                 hon jim costa;mr costa           \"jim costa|\\\\… House        110 2007-03-01 HON. JI… A TRIBUTE … https://… https://… Jim        COSTA     cali… #>  5 000005      000005   20124 GRAVES, Samuel             hon sam graves;mr graves         \"samuel grave… House        110 2007-03-01 HON. SA… RECOGNIZIN… https://… https://… Samuel     GRAVES    miss… #>  6 000006      000006   29339 BISHOP, Sanford Dixon, Jr. hon sanford d bishop;mr bishop   \"sanford bish… House        110 2007-03-01 HON. SA… IN HONOR O… https://… https://… Sanford    BISHOP    geor… #>  7 000007      000007   15072 TOWNS, Edolphus            hon edolphus towns;mr towns      \"edolphus tow… House        110 2007-03-01 HON. ED… NEW PUNJAB… https://… https://… Edolphus   TOWNS     new … #>  8 000008      000008   29576 DAVIS, Thomas M., III      hon tom davis;mr tom davis       \"thomas davis… House        110 2007-03-01 HON. TO… HONORING T… https://… https://… Thomas     DAVIS     virg… #>  9 000009      000009   20124 GRAVES, Samuel             hon sam graves;mr graves         \"samuel grave… House        110 2007-03-01 HON. SA… RECOGNIZIN… https://… https://… Samuel     GRAVES    miss… #> 10 000010      000010   29906 UDALL, Mark                hon mark udall;mr udall          \"mark udall|\\… House        110 2007-03-01 HON. MA… INTRODUCTI… https://… https://… Mark       UDALL     colo… #> # … with 184 more rows"},{"path":[]},{"path":"/index.html","id":"augmentcongress","dir":"","previous_headings":"TODO","what":"augmentCongress()","title":"Detect legislator names in messy text","text":"augmentCongress() augments dataframe includes least one unique identifier include suite common identifiers. extractMemberName links detected name ICPSR IDs voteview.com, already information, like party (party_name), state, district, ideology scores (nominate.dim1) legislator detected text. integrate congress /congressData packages. example, may want function, augmentCongress simply join identifiers datasets ICPSR numbers. Perhaps best left congress.","code":"library(dplyr) #>  #> Attaching package: 'dplyr'  #> The following objects are masked from 'package:stats': #>  #>     filter, lag  #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union full_join(cr, members) |> select(data_row_id, match_id, bioname, icpsr, congress, state, district_code, party_name, nominate.dim1, url) #> Joining, by = c(\"icpsr\", \"bioname\", \"pattern\", \"chamber\", \"congress\", \"first_name\", \"last_name\", \"state\")  #> # A tibble: 6,667 × 10 #>    data_row_id match_id bioname                    icpsr congress state        district_code party_name       nominate.dim1 url                                                                          #>    <chr>       <chr>    <chr>                      <dbl>    <dbl> <chr>                <int> <chr>                    <dbl> <chr>                                                                        #>  1 000001      000001   GRAVES, Samuel             20124      110 missouri                 6 Republican Party         0.442 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-rema… #>  2 000002      000002   UDALL, Mark                29906      110 colorado                 2 Democratic Party        -0.353 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-rema… #>  3 000003      000003   LANGEVIN, James            20136      110 rhode island             2 Democratic Party        -0.375 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-rema… #>  4 000004      000004   COSTA, Jim                 20501      110 california              20 Democratic Party        -0.191 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-rema… #>  5 000005      000005   GRAVES, Samuel             20124      110 missouri                 6 Republican Party         0.442 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-rema… #>  6 000006      000006   BISHOP, Sanford Dixon, Jr. 29339      110 georgia                  2 Democratic Party        -0.282 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-rema… #>  7 000007      000007   TOWNS, Edolphus            15072      110 new york                10 Democratic Party        -0.519 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-rema… #>  8 000008      000008   DAVIS, Thomas M., III      29576      110 virginia                11 Republican Party         0.282 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-rema… #>  9 000009      000009   GRAVES, Samuel             20124      110 missouri                 6 Republican Party         0.442 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-rema… #> 10 000010      000010   UDALL, Mark                29906      110 colorado                 2 Democratic Party        -0.353 https://www.congress.gov/congressional-record/2007/03/01/extensions-of-rema… #> # … with 6,657 more rows # add other common unique identifiers cr_augmented <- augmentCongress(cr)"},{"path":[]},{"path":"/reference/extractMemberName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect legislator names in messy text\n — extractMemberName","text":"","code":"extractMemberName(data, members = members, col_name, congresses = unique(data$congress))"},{"path":"/reference/extractMemberName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect legislator names in messy text\n — extractMemberName","text":"data  members  col_name  congresses","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/extractMemberName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect legislator names in messy text\n — extractMemberName","text":"","code":"##---- Should be DIRECTLY executable !! ---- ##-- ==>  Define data, use random, ##--  or do  help(data=index)  for the standard data sets.  ## The function is currently defined as function (data, members = members, col_name, congresses = unique(data$congress)) {     data %<>% mutate(string = data[[col_name]])     if (\"chamber\" %in% names(data)) {         data %<>% mutate(string = ifelse(!is.na(chamber), paste(chamber,             string) %>% str_replace(\"House\", \"Represenative\") %>%             str_replace(\"Senate\", \"Senator\"), string))         data %<>% select(-chamber)     }     if (\"state\" %in% names(data)) {         data %<>% mutate(string = ifelse(!is.na(state), paste(string,             \"-\", stateFromFull(state)), string))         data %<>% select(-state)     }     t <- Sys.time()     if (!\"data_id\" %in% names(data)) {         data$data_id <- 1:nrow(data)     }     data$data_id %<>% str_squish() %>% as.numeric()     data$ID <- 1:nrow(data)     data %<>% mutate(data_id = coalesce(data_id, ID) %>% as.numeric())     data$data_id %<>% formatC(width = 6, flag = \"0\", format = \"fg\")     data$congress %<>% replace_na(0) %>% as.numeric() %>% replace_na(0) %>%         as.numeric()     data %<>% mutate(last_name = NA, first_name = NA, pattern = NA) %>%         select(-first_name, -last_name, -pattern)     data$string %<>% cleanFROMcolumn()     data$string %<>% ocr.errors()     data$string %<>% tolower() %>% str_replace(\"senator senator\",         \"senator\") %>% str_replace(\"represenative representative\",         \"representative\")     data$string %<>% str_replace(\"na politano\", \"napolitano\")     data$string %<>% str_remove(\"^na \")     data$string %<>% str_remove(\"^na \")     data$string %<>% str_replace(\"han na\\b\", \"hanna\")     data$string %<>% str_remove_all(\"\\bna\\b\")     data$string %<>% str_squish()     data$string %<>% str_replace(\" ,\", \", \")     data$string %<>% str_squish()     data$string %<>% replace_na(\"\")     for (i in 1:dim(typos)[1]) {         r <- typos$correct[i]         p <- typos$typos[i]         data %<>% mutate(string = string %>% purrr::map_chr(str_replace,             pattern = p, replacement = r %>% paste(\"\")))     }     data$string %<>% str_replace(\" ,\", \", \") %>% str_squish()     base::message(paste(\"Typos fixed in\", round(Sys.time() -         t), \"seconds\"))     t <- Sys.time()     data <- map_dfr(congresses, extractNamesPerCongress, data = data,         members = members)     base::message(paste(\"Names matched in\", round(Sys.time() -         t), \"seconds\"))     data %<>% distinct()     data$ID <- 1:nrow(data) %>% formatC(width = 6, flag = \"0\")     data %<>% left_join(members %>% select(icpsr, pattern, bioname,         first_name, last_name, congress, chamber, state) %>%         distinct()) %>% distinct()     data$icpsr %<>% as.numeric()     data %<>% select(data_row_id = data_id, match_id = ID, icpsr,         bioname, string, pattern, chamber, congress, everything())     return(data)   } #> function (data, members = members, col_name, congresses = unique(data$congress)) #> { #>     data %<>% mutate(string = data[[col_name]]) #>     if (\"chamber\" %in% names(data)) { #>         data %<>% mutate(string = ifelse(!is.na(chamber), paste(chamber, #>             string) %>% str_replace(\"House\", \"Represenative\") %>% #>             str_replace(\"Senate\", \"Senator\"), string)) #>         data %<>% select(-chamber) #>     } #>     if (\"state\" %in% names(data)) { #>         data %<>% mutate(string = ifelse(!is.na(state), paste(string, #>             \"-\", stateFromFull(state)), string)) #>         data %<>% select(-state) #>     } #>     t <- Sys.time() #>     if (!\"data_id\" %in% names(data)) { #>         data$data_id <- 1:nrow(data) #>     } #>     data$data_id %<>% str_squish() %>% as.numeric() #>     data$ID <- 1:nrow(data) #>     data %<>% mutate(data_id = coalesce(data_id, ID) %>% as.numeric()) #>     data$data_id %<>% formatC(width = 6, flag = \"0\", format = \"fg\") #>     data$congress %<>% replace_na(0) %>% as.numeric() %>% replace_na(0) %>% #>         as.numeric() #>     data %<>% mutate(last_name = NA, first_name = NA, pattern = NA) %>% #>         select(-first_name, -last_name, -pattern) #>     data$string %<>% cleanFROMcolumn() #>     data$string %<>% ocr.errors() #>     data$string %<>% tolower() %>% str_replace(\"senator senator\", #>         \"senator\") %>% str_replace(\"represenative representative\", #>         \"representative\") #>     data$string %<>% str_replace(\"na politano\", \"napolitano\") #>     data$string %<>% str_remove(\"^na \") #>     data$string %<>% str_remove(\"^na \") #>     data$string %<>% str_replace(\"han na\\b\", \"hanna\") #>     data$string %<>% str_remove_all(\"\\bna\\b\") #>     data$string %<>% str_squish() #>     data$string %<>% str_replace(\" ,\", \", \") #>     data$string %<>% str_squish() #>     data$string %<>% replace_na(\"\") #>     for (i in 1:dim(typos)[1]) { #>         r <- typos$correct[i] #>         p <- typos$typos[i] #>         data %<>% mutate(string = string %>% purrr::map_chr(str_replace, #>             pattern = p, replacement = r %>% paste(\"\"))) #>     } #>     data$string %<>% str_replace(\" ,\", \", \") %>% str_squish() #>     base::message(paste(\"Typos fixed in\", round(Sys.time() - #>         t), \"seconds\")) #>     t <- Sys.time() #>     data <- map_dfr(congresses, extractNamesPerCongress, data = data, #>         members = members) #>     base::message(paste(\"Names matched in\", round(Sys.time() - #>         t), \"seconds\")) #>     data %<>% distinct() #>     data$ID <- 1:nrow(data) %>% formatC(width = 6, flag = \"0\") #>     data %<>% left_join(members %>% select(icpsr, pattern, bioname, #>         first_name, last_name, congress, chamber, state) %>% #>         distinct()) %>% distinct() #>     data$icpsr %<>% as.numeric() #>     data %<>% select(data_row_id = data_id, match_id = ID, icpsr, #>         bioname, string, pattern, chamber, congress, everything()) #>     return(data) #>   } #> <environment: 0x12a380758>"}]
